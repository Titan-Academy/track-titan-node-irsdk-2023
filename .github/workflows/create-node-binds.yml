name: Build and Publish Precompiled Binaries

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'use-precompiled-binaries-with-node-api'

jobs:
  build-and-publish:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18, 19, 20, 21, 22, 23]
        platform: [win32]
        architecture: [x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install distutils
        run: |
          python -m ensurepip --upgrade
          python -m pip install setuptools --upgrade

      - name: Cache node-gyp build artifacts
        uses: actions/cache@v3
        with:
          path: ~/.cache/node-gyp
          key: ${{ runner.os }}-node-gyp-${{ matrix.node-version }}-${{ matrix.architecture }}
          restore-keys: |
            ${{ runner.os }}-node-gyp-${{ matrix.node-version }}-

      - name: Install nan@latest for newer Node.js versions
        if: ${{ matrix.node-version > 20 }}
        run: npm install nan@latest

      - name: Install dependencies
        run: npm run installFromSource

      - name: Build binary for ${{ matrix.platform }} ${{ matrix.architecture }}
        run: npm run prebuild
        env:
          npm_config_arch: ${{ matrix.architecture }}
          npm_config_platform: ${{ matrix.platform }}

      - name: Package binary for ${{ matrix.platform }} ${{ matrix.architecture }}
        run: npm run package
        env:
          npm_config_arch: ${{ matrix.architecture }}
          npm_config_platform: ${{ matrix.platform }}

      - name: Test the binary
        run: npm run testbinary
        env:
          npm_config_arch: ${{ matrix.architecture }}
          npm_config_platform: ${{ matrix.platform }}
          
      - name: Create binding location file
        run: node createBindingLocation.js

      - name: Commit binary to the repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Add built binaries for ${{ matrix.platform }} ${{ matrix.architecture }} with Node.js ${{ matrix.node-version }}"
          git push
          git push
